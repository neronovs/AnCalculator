apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("../signing-keys/ancalculator/.keys/keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'ru.narod.nod.ancalculator'
    compileSdk 36
    defaultConfig {
        applicationId "ru.narod.nod.ancalculator"
        minSdkVersion 21
        targetSdkVersion 36
        versionCode commitCount()
        versionName "1.3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        project.ext.set("archivesBaseName", "CalcRelease-")
    }
    viewBinding {
        enabled = true
    }

    signingConfigs {
        // Keys are kept on git@gitlab.com:neronovs/signing-keys.git
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "PROGRAM_NAME", '"AnCalc DEBUG"'
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField "String", "PROGRAM_NAME", '"AnCalculator :)"'
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = '17'
        targetCompatibility = '17'
    }
    buildFeatures {
        buildConfig = true
    }
}

kotlin {
    jvmToolchain(17)
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    //MVP lib
    implementation 'com.hannesdorfmann.mosby3:mvp:3.1.1'

    //Animation lib
    implementation 'com.daimajia.androidanimations:library:2.4@aar'

    //Crashlytics lib
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

    //Resizable TextView
    implementation 'me.grantland:autofittextview:0.2.1'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    implementation('com.crashlytics.sdk.android:crashlytics-ndk:2.1.1@aar') {
        transitive = true
    }
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

def commitCount() {
    final def stdout = new ByteArrayOutputStream()
    // The following 'description' variable is just a local string for the println.
    // It does not set a description for any Gradle task.
    def description = "git rev-list --full-history --all"
    println(description)
    project.services.get(ExecOperations.class).exec {
        commandLine 'git', 'rev-list', '--full-history', '--all'
        standardOutput = stdout
    }
    final String output = stdout.toString()
    final List<String> commits = output.split("\n")
    final int code = commits.size()
    println("Version Code: " + code)
    return code
}
